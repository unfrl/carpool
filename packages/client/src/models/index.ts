/*
 * Code generated by Microsoft (R) AutoRest Code Generator.
 * Changes may cause incorrect behavior and will be lost if the code is regenerated.
 */

import { ServiceClientOptions } from "@azure/ms-rest-js";
import * as msRest from "@azure/ms-rest-js";

/**
 * An interface representing SignUpDto.
 */
export interface SignUpDto {
  email: string;
  password: string;
  displayName: string;
}

/**
 * An interface representing SignInDto.
 */
export interface SignInDto {
  email: string;
  password: string;
}

/**
 * An interface representing AuthDto.
 */
export interface AuthDto {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accessToken: string;
}

/**
 * An interface representing GoogleSignInDto.
 */
export interface GoogleSignInDto {
  idToken: string;
  displayName?: string;
}

/**
 * An interface representing SocialAuthDto.
 */
export interface SocialAuthDto {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly accessToken: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly nextStep: number;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly error: string;
}

/**
 * An interface representing PasswordResetRequestDto.
 */
export interface PasswordResetRequestDto {
  email: string;
}

/**
 * An interface representing PasswordResetDto.
 */
export interface PasswordResetDto {
  email: string;
  token: string;
  newPassword: string;
}

/**
 * An interface representing UserDto.
 */
export interface UserDto {
  id: string;
  email: string;
  displayName: string;
}

/**
 * An interface representing CarpoolMetadataDto.
 */
export interface CarpoolMetadataDto {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly seatsRemaining: number;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly driverCount: number;
}

/**
 * An interface representing CarpoolDtoUser.
 */
export interface CarpoolDtoUser extends UserDto {
}

/**
 * An interface representing CarpoolDtoMetadata.
 */
export interface CarpoolDtoMetadata extends CarpoolMetadataDto {
}

/**
 * An interface representing CarpoolDto.
 */
export interface CarpoolDto {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly name: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly description: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly urlId: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly destination: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly dateTime: Date;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly created: Date;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly updated: Date;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly user: CarpoolDtoUser;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly metadata: CarpoolDtoMetadata;
}

/**
 * An interface representing CarpoolQueryResponseDtoCarpool.
 */
export interface CarpoolQueryResponseDtoCarpool extends CarpoolDto {
}

/**
 * An interface representing CarpoolQueryResponseDto.
 */
export interface CarpoolQueryResponseDto {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly carpool: CarpoolQueryResponseDtoCarpool;
  /**
   * Possible values include: 'created', 'driving', 'passenger'
   */
  type: Type;
}

/**
 * An interface representing UpsertCarpoolDto.
 */
export interface UpsertCarpoolDto {
  carpoolName: string;
  description?: string;
  destination: string;
  dateTime: Date;
}

/**
 * An interface representing Car.
 */
export interface Car {
  capacity: number;
  color: string;
  /**
   * Possible values include: 'sedan', 'truck', 'suv', 'van'
   */
  type: Type1;
}

/**
 * An interface representing UpsertDriverDto.
 */
export interface UpsertDriverDto {
  car: Car;
}

/**
 * An interface representing PassengerDtoUser.
 */
export interface PassengerDtoUser extends UserDto {
}

/**
 * An interface representing PassengerDto.
 */
export interface PassengerDto {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly phoneNumber: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly address: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly user: PassengerDtoUser;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly driverId: string;
}

/**
 * An interface representing DriverDtoCar.
 */
export interface DriverDtoCar extends Car {
}

/**
 * An interface representing DriverDtoUser.
 */
export interface DriverDtoUser extends UserDto {
}

/**
 * An interface representing DriverDto.
 */
export interface DriverDto {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly id: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly car: DriverDtoCar;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly carpoolId: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly user: DriverDtoUser;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly seatsRemaining: number;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly passengerUserIds: string[];
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly passengers: PassengerDto[];
}

/**
 * An interface representing UpsertPassengerDto.
 */
export interface UpsertPassengerDto {
  phoneNumber?: string;
  address: string;
}

/**
 * An interface representing VerificationDto.
 */
export interface VerificationDto {
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly email: string;
  /**
   * **NOTE: This property will not be serialized. It can only be populated by the server.**
   */
  readonly token: string;
}

/**
 * An interface representing CarpoolAPIOptions.
 */
export interface CarpoolAPIOptions extends ServiceClientOptions {
  baseUri?: string;
}

/**
 * Defines values for Type.
 * Possible values include: 'created', 'driving', 'passenger'
 * @readonly
 * @enum {string}
 */
export type Type = 'created' | 'driving' | 'passenger';

/**
 * Defines values for Type1.
 * Possible values include: 'sedan', 'truck', 'suv', 'van'
 * @readonly
 * @enum {string}
 */
export type Type1 = 'sedan' | 'truck' | 'suv' | 'van';

/**
 * Contains response data for the signIn operation.
 */
export type SignInResponse = AuthDto & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthDto;
    };
};

/**
 * Contains response data for the signInWithGoogle operation.
 */
export type SignInWithGoogleResponse = SocialAuthDto & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: SocialAuthDto;
    };
};

/**
 * Contains response data for the resetPassword operation.
 */
export type ResetPasswordResponse = AuthDto & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthDto;
    };
};

/**
 * Contains response data for the getMyProfile operation.
 */
export type GetMyProfileResponse = UserDto & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: UserDto;
    };
};

/**
 * Contains response data for the getMyCarpools operation.
 */
export type GetMyCarpoolsResponse = Array<CarpoolQueryResponseDto> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CarpoolQueryResponseDto[];
    };
};

/**
 * Contains response data for the getUserCarpools operation.
 */
export type GetUserCarpoolsResponse = Array<CarpoolDto> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CarpoolDto[];
    };
};

/**
 * Contains response data for the createCarpool operation.
 */
export type CreateCarpoolResponse = CarpoolDto & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CarpoolDto;
    };
};

/**
 * Contains response data for the getCarpool operation.
 */
export type GetCarpoolResponse = CarpoolDto & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CarpoolDto;
    };
};

/**
 * Contains response data for the updateCarpool operation.
 */
export type UpdateCarpoolResponse = CarpoolDto & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: CarpoolDto;
    };
};

/**
 * Contains response data for the createDriver operation.
 */
export type CreateDriverResponse = DriverDto & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DriverDto;
    };
};

/**
 * Contains response data for the getDrivers operation.
 */
export type GetDriversResponse = Array<DriverDto> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: DriverDto[];
    };
};

/**
 * Contains response data for the createPassenger operation.
 */
export type CreatePassengerResponse = PassengerDto & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PassengerDto;
    };
};

/**
 * Contains response data for the getPassengers operation.
 */
export type GetPassengersResponse = Array<PassengerDto> & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: PassengerDto[];
    };
};

/**
 * Contains response data for the verifyUser operation.
 */
export type VerifyUserResponse = AuthDto & {
  /**
   * The underlying HTTP response.
   */
  _response: msRest.HttpResponse & {
      /**
       * The response body as text (string format)
       */
      bodyAsText: string;

      /**
       * The response body as parsed JSON or XML
       */
      parsedBody: AuthDto;
    };
};
